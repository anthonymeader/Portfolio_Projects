-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\Antho\Desktop\EELE_468\eq\hdlsrc\bandpass_eq\fftAnalysisSynthesis_tc.vhd
-- 
-- Generated by MATLAB 9.14 and HDL Coder 4.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: fftAnalysisSynthesis_tc
-- Source Path: fftAnalysisSynthesis_tc
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enb         : identical to clk_enable
-- enb_1_1_1   : identical to clk_enable
-- enb_1_2048_0: 2048x slower than clk with last phase
-- enb_1_2048_1: 2048x slower than clk with phase 1
-- enb_1_2048_11: 2048x slower than clk with phase 11
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY fftAnalysisSynthesis_tc IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enb                               :   OUT   std_logic;
        enb_1_1_1                         :   OUT   std_logic;
        enb_1_2048_0                      :   OUT   std_logic;
        enb_1_2048_1                      :   OUT   std_logic;
        enb_1_2048_11                     :   OUT   std_logic
        );
END fftAnalysisSynthesis_tc;


ARCHITECTURE rtl OF fftAnalysisSynthesis_tc IS

  ATTRIBUTE multstyle : string;

  -- Signals
  SIGNAL count2048                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL comp_0_tmp                       : std_logic;
  SIGNAL phase_0_tmp                      : std_logic;
  SIGNAL phase_0                          : std_logic;
  SIGNAL enb_1_2048_0_1                   : std_logic;
  SIGNAL comp_1_tmp                       : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL enb_1_2048_1_1                   : std_logic;
  SIGNAL comp_11_tmp                      : std_logic;
  SIGNAL phase_11_tmp                     : std_logic;
  SIGNAL phase_11                         : std_logic;
  SIGNAL enb_1_2048_11_1                  : std_logic;

BEGIN
  enb <= clk_enable;

  enb_1_1_1 <= clk_enable;

  -- Count limited, Unsigned Counter
  --  initial value   = 1
  --  step value      = 1
  --  count to value  = 2047
  counter_2048_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      count2048 <= to_unsigned(16#001#, 11);
    ELSIF rising_edge(clk) THEN
      IF clk_enable = '1' THEN
        count2048 <= count2048 + to_unsigned(16#001#, 11);
      END IF;
    END IF;
  END PROCESS counter_2048_process;


  
  comp_0_tmp <= '1' WHEN count2048 = to_unsigned(16#7FF#, 11) ELSE
      '0';

  phase_0_tmp <= comp_0_tmp AND clk_enable;

  phase_delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_0 <= '0';
    ELSIF rising_edge(clk) THEN
      IF clk_enable = '1' THEN
        phase_0 <= phase_0_tmp;
      END IF;
    END IF;
  END PROCESS phase_delay_process;


  enb_1_2048_0_1 <= phase_0 AND clk_enable;

  enb_1_2048_0 <= enb_1_2048_0_1;

  
  comp_1_tmp <= '1' WHEN count2048 = to_unsigned(16#000#, 11) ELSE
      '0';

  phase_1_tmp <= comp_1_tmp AND clk_enable;

  phase_delay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_1 <= '1';
    ELSIF rising_edge(clk) THEN
      IF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF;
  END PROCESS phase_delay_1_process;


  enb_1_2048_1_1 <= phase_1 AND clk_enable;

  enb_1_2048_1 <= enb_1_2048_1_1;

  
  comp_11_tmp <= '1' WHEN count2048 = to_unsigned(16#00A#, 11) ELSE
      '0';

  phase_11_tmp <= comp_11_tmp AND clk_enable;

  phase_delay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_11 <= '0';
    ELSIF rising_edge(clk) THEN
      IF clk_enable = '1' THEN
        phase_11 <= phase_11_tmp;
      END IF;
    END IF;
  END PROCESS phase_delay_2_process;


  enb_1_2048_11_1 <= phase_11 AND clk_enable;

  enb_1_2048_11 <= enb_1_2048_11_1;

END rtl;

